/*
Auto-generated by: https://github.com/pmndrs/gltfjsx @ https://gltf.pmnd.rs/
*/

import { useGLTF } from '@react-three/drei'
import { getBoardHex3DCoords } from '../../utils/map-utils'
import { HEXGRID_HEX_HEIGHT } from '../../utils/constants'
import { BoardHex } from '../../types'

export default function TicallaPalm({ boardHex }: { boardHex: BoardHex }) {
  const { nodes, materials } = useGLTF('/ticalla-palm-colored-lowpoly.glb') as any
  const { x, z } = getBoardHex3DCoords(boardHex)
  const y = (boardHex.altitude - 1) * HEXGRID_HEX_HEIGHT
  const yTree = y + HEXGRID_HEX_HEIGHT
  const options = getOptionsForTreeHeight(boardHex?.obstacleHeight ?? 14)
  function getOptionsForTreeHeight(height: number) {
    switch (height) {
      case 14:
        return { scaleX: 0.038, scaleY: 0.046, y: yTree }
      case 15:
        return { scaleX: 0.038, scaleY: 0.042, y: yTree }
      case 16:
      default:
        return { scaleX: 0.038, scaleY: 0.038, y: yTree }
    }
  }
  return (
    <group dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.AlienGrassUFO_v01_Tuft_a_1.geometry}
        material={materials.PalmGrass}
        scale={0.038}
        position={[x, options.y, z]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.AlienGrassUFO_v01_Tuft_a_2.geometry}
        material={materials.PalmTrunk}
        scale={[options.scaleX, options.scaleY, options.scaleX]}
        position={[x, options.y, z]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.AlienGrassUFO_v01_Tuft_a_3.geometry}
        material={materials.PalmLeaf}
        scale={0.038}
        position={[x, options.y, z]}
      />
    </group>
  )
}

useGLTF.preload('/ticalla-palm-colored-lowpoly.glb')
