/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from '@react-three/drei'
import { BoardHex, HexTerrain } from '../../types'
import { getBoardHex3DCoords } from '../../utils/map-utils'
import { HEXGRID_HEX_APOTHEM, HEXGRID_HEX_HEIGHT, HEXGRID_HEX_RADIUS } from '../../utils/constants'
import { hexTerrainColor } from '../maphex/hexColors'

export default function Ruins2({ boardHex }: { boardHex: BoardHex }) {
  const {
    nodes,
    // materials
  } = useGLTF('/ruin2-colored-lowpoly.glb') as any
  const { x, z } = getBoardHex3DCoords(boardHex)
  const y = (boardHex.altitude - 1) * HEXGRID_HEX_HEIGHT
  const xLength = HEXGRID_HEX_APOTHEM * 0.7
  const xLength2 = xLength / 1.5
  const zLength = HEXGRID_HEX_RADIUS * 0.7
  const zLength2 = zLength * 1.3
  const options = getOptions(boardHex.pieceRotation)
  function getOptions(rotation: number) {
    switch (rotation) {
      case 0:
        return { rotationY: Math.PI / 6, xAdd: xLength, zAdd: zLength }
      case 1:
        return { rotationY: - Math.PI / 6, xAdd: -xLength2, zAdd: zLength2 }
      case 2:
        return { rotationY: -Math.PI / 2, xAdd: -xLength * 1.5, zAdd: zLength / 5 }
      case 3:
        return { rotationY: Math.PI / 6, xAdd: 0, zAdd: 0 }
      case 4:
        return { rotationY: 0, xAdd: 0, zAdd: 0 }
      case 5:
        return { rotationY: -Math.PI / 6, xAdd: 0, zAdd: 0 }
      default:
        return { rotationY: 0, xAdd: 0, zAdd: 0 }
    }
  }
  return (
    <group
      // position={[x, y, z]}
      position={[x + options.xAdd, y, z + options.zAdd]}
      rotation={[0, options.rotationY, 0]}
      scale={0.038}
      dispose={null}
    >
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Ruin_Small_Scanned.geometry}
      // material={materials.RuinGray}
      >
        <meshMatcapMaterial color={hexTerrainColor[HexTerrain.ruin]} />
      </mesh>
    </group>
  )
}

useGLTF.preload('/ruin2-colored-lowpoly.glb')
